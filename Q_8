#include <iostream>
#include <cmath>

long max_n_adjacent_digits_product ( std::string num, int adjacent_num)
{
int num_digits = num.length()-5;
  long max=1;
  long multiply=1;
//   int num_groups = (num_digits%adjacent_num==0) ?  int(num_digits/adjacent_num) :  int(num_digits/adjacent_num)+1;
  for (int i=0; i<num.length()-adjacent_num+1; i++)
  {
    multiply = 1;
    for (int j=0;j<adjacent_num;j++)
            multiply = multiply * ( int(num[i+j]) -48);
    if (multiply >= max)
      max = multiply;
  }
  return(max);
}

int main()
{
  std::string result_string = "73167176531330624919225119674426574742355349194934";
  result_string +="96983520312774506326239578318016984801869478851843";
  result_string +="85861560789112949495459501737958331952853208805511";
  result_string +="12540698747158523863050715693290963295227443043557";
  result_string += "66896648950445244523161731856403098711121722383113";
  result_string += "62229893423380308135336276614282806444486645238749";
  result_string += "30358907296290491560440772390713810515859307960866";
  result_string += "70172427121883998797908792274921901699720888093776";
  result_string += "65727333001053367881220235421809751254540594752243";
  result_string += "52584907711670556013604839586446706324415722155397";
  result_string += "53697817977846174064955149290862569321978468622482";
  result_string += "83972241375657056057490261407972968652414535100474";
  result_string += "82166370484403199890008895243450658541227588666881";
  result_string += "16427171479924442928230863465674813919123162824586";
  result_string += "17866458359124566529476545682848912883142607690042";
  result_string += "24219022671055626321111109370544217506941658960408";
  result_string += "07198403850962455444362981230987879927244284909188";
  result_string += "84580156166097919133875499200524063689912560717606";
  result_string += "05886116467109405077541002256983155200055935729725";
  result_string += "71636269561882670428252483600823257530420752963450";

  std::cout<<" "<< max_n_adjacent_digits_product(result_string,4)<<"\n" ;
  std::cout<<" "<< max_n_adjacent_digits_product(result_string,13)<<"\n" ;
}
