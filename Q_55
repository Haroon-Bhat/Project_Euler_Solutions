
#include <iostream>
#include <vector>

using namespace std;

bool is_palindrome( const vector< int >& n )
{
  bool same_digit = true;
  for ( int i = 0; i < n.size() / 2 && same_digit; i++ )
    same_digit = n[ i ] == n[ n.size() - i - 1 ];
  return same_digit;
}

void reverse_add( const vector< int >& n, vector< int >& r )
{
  r.clear();
  int c = 0;
  for ( int i = 0; i < n.size(); i++ ) {
    div_t d = div ( n[ i ] + n[ n.size() - i - 1 ] + c, 10 );
    r.push_back( d.rem );
    c = d.quot;
  }
  if ( c != 0 )
    r.push_back( c );
}

bool is_lychrel( int n )
{
  vector< int > a, r;
  while ( n != 0 ) {
    r.push_back( n % 10 );
    n /= 10;
  }
  bool palindrome = false;
  for ( int i = 1; i < 50 && !palindrome; i++ ) {
    a = r;
    reverse_add( a, r );
    palindrome = is_palindrome( r );
  }
  return !palindrome;
}

int main()
{
  int count = 0;
  for ( int n = 1; n < 10000; n++ )
    if ( is_lychrel( n ) )
      count++;
  cout << "Count = " << count << endl;
}
